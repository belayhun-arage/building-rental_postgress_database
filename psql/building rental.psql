-- first create the database named ----building_rental
CREATE DATABASE building_rental;
-- create role named building_rental.tbl_role
CREATE TABLE tbl_role(
    role_id serial PRIMARY KEY,
    role_name VARCHAR(40) UNIQUE NOT NULL
);

-- create table user 
CREATE TABLE tbl_user(
    user_id serial PRIMARY KEY,
    role_id integer,
    user_name VARCHAR(40)  NOT NULL,
    user_password VARCHAR(40) NOT NULL,
    gender VARCHAR(40) ,
    phone_number VARCHAR(40) UNIQUE,
    email VARCHAR(40),
    constraint role_id foreign key(role_id) references tbl_role(role_id),
);

-- create table location
CREATE TABLE tbl_location(
    location_id serial PRIMARY KEY,
    city VARCHAR(40),
	description VARCHAR(400),
    street_name VARCHAR(40),
    street_number VARCHAR(40)
);

-- create table building
CREATE TABLE tbl_building(
    building_id serial PRIMARY KEY,
    number_of_floor integer,
    nick_name VARCHAR(40)
);

-- create table floor
CREATE TABLE tbl_floor(
    floor_id serial PRIMARY KEY,
    number_of_room integer,
    building_id integer,
    constraint building_id foreign key( building_id) references tbl_building(building_id)
);

-- create table building_rental
 CREATE TABLE tbl_owner(
     owner_id serial PRIMARY KEY,
     user_id integer,
     constraint building_id foreign key(building_id) references tbl_building(building_id)
 );

-- create table tbl_room
CREATE TABLE tbl_room(
    room_id serial PRIMARY KEY,
    floor_id integer,
    owner_id integer NOT NULL,
    number_of_class integer NOT NULL,
    constraint floor_id foreign key(floor_id) references tbl_floor(floor_id),
    constraint owner_id foreign key(owner_id) references tbl_owner(owner_id)
);

-- create table manager
CREATE TABLE tbl_manager(
    manager_id serial PRIMARY KEY,
    user_id integer,
    constraint user_id foreign key(user_id) references tbl_user(user_id),
);

-- create tenant or resident table
CREATE TABLE tbl_resident(
    resident_id serial PRIMARY KEY,
    user_id integer,
    constraint user_id foreign key(user_id) references tbl_user(user_id)
);

-- create table rent
CREATE TABLE tbl_rent(
    rent_id serial PRIMARY KEY,
    resident_id integer,
    room_id integer,
    monthly_price numeric,
    start_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    constraint resident_id foreign key(resident_id) references tbl_resident(resident_id)
);

-- create view called room_resident
CREATE or REPLACE VIEW room_resident AS
SELECT DISTINCT resident_id,room_id
FROM tbl_rent
WHERE start_date='2021-12-10 16:37:57.801724'
ORDER BY resident_id desc;

-- create view called owner_floor_
CREATE or REPLACE VIEW owner_floor AS
SELECT DISTINCT owner_id,floor_id
FROM tbl_room
WHERE number_of_class > 3
ORDER BY owner_id ASC;

-- alter table building in order to add new column called location_id 
ALTER TABLE tbl_building
ADD location_id integer,
ADD constraint location_id foreign key(location_id) references tbl_building(location_id);

-- alter table user to make the default role value to be user
ALTER TABLE tbl_user
ALTER role_id SET DEFAULT 3;


---ADD DATA
INSERT INTO tbl_role(role_name)
VALUES ('Owner'), ('Manager'), ('Resident');


INSERT INTO tbl_location(city,street_name,street_number,description)
Values
    ('Addis Ababa','piasa'    ,'01', 'this is a place where...'),
    ('Dire dawa'  ,'piasa'    ,'01', 'this is a place where...'),
    ('Addis Ababa','Bole'     ,'02', 'this is a place where...'),
    ('Dessie'     ,'menafesha','01', 'this is a place where...'),
    ('Addis Ababa','stadium'  ,'03', 'this is a place where...'),
    ('Dessie'     ,'piasa'    ,'02', 'this is a place where...'),
    ('Addis Ababa','megenagna','04', 'this is a place where...'),
;

INSERT INTO tbl_building(number_of_floor,nick_name,location_id)
Values
    (10,'ጎላጎል ህንጻ',1),
    (15,'ደሴ',4),
    (20,'ድሬ ህንጻ',2),
    (47,'ንግድ ባንክ ህንጻ',5);

INSERT INTO tbl_user(user_name,user_password,gender,phone_number,email)
Values
    ('belay','password','MALE','0934343430','someone@gmail.com'),
    ('sami','password','MALE','0934343433','someone@gmail.com'),
    ('fanni','password','MALE','0934343434','someone@gmail.com'),
    ('nathy','password','MALE','0934343435','someone@gmail.com'),
    ('kiddy','password','Female','0934343436','someone@gmail.com'),
    ('mahi','password','MALE','0934343437','someone@gmail.com'),
    ('she','password','female','0934343438','someone@gmail.com'),
    ('mesti','password','female','0934343439','someone@gmail.com'),
    ('betty','password','female','0934343410','someone@gmail.com'),
    ('alexa','password','MALE','0934343411','someone@gmail.com');
    


INSERT INTO tbl_owner(user_id)
Values(19),(25),(30)

INSERT INTO tbl_manager(user_id)
Values(19),(26)

INSERT INTO tbl_floor(number_of_room , building_id,)
Values(1,1),(2,1),(3,1),(9,1),(4,1),(5,1),(6,1),(7,1),(8,1),(10,1)
    (1,2),(2,2),(3,2),(9,2),(4,2),(5,2),(6,2),(7,2),(8,2),(10,2),
    (1,3),(2,3),(3,3),(9,3),(4,3),(5,3),(6,3),(7,3),(8,3),(10,3),
    (1,4),(2,4),(3,4),(9,4),(4,4),(5,4),(6,4),(7,4),(8,4),(10,4);

INSERT INTO tbl_room(floor_id,owner_id,number_of_class)
VALUES(1,1,3),(11,2,2),(21,3,4),(31,1,3);

INSERT INTO tbl_resident(user_id)
values(19),(20),(21),(23),(24),(25),(26),(27),(28),(30),(31)

INSERT INTO tbl_rent(resident_id ,room_id ,monthly_price)
VALUES(12,1,6000),(17,2,10000),(20,3,15000),(21,4,20000)

-- #UNION
-- combine the result sets of two or more SELECT statements into a single result set
-- LET US POPULATE ALL BUILDING FROM TWO CITY 
SELECT nick_name
FROM tbl_building
WHERE location_id=(SELECT location_id FROM tbl_location WHERE city='Addis Ababa')
UNION
SELECT nick_name
FROM tbl_building
WHERE location_id=(SELECT location_id FROM tbl_location WHERE city='Dessie')

SELECT room_id
FROM tbl_room
UNION
SELECT resident_id
FROM tbl_resident;

-- INTERSECTION
-- returns any rows that are available in both result sets
-- LET US POPULATE ALL pesrsons who are both tenant and 
SELECT resident_id
FROM tbl_resident
INTERSECT
SELECT manager_id
FROM tbl_manager;

SELECT * FROM room_resident;
SELECT * FROM owner_floor;